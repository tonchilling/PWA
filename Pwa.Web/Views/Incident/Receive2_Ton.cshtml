@using Pwa.FrameWork.Dao.EF.Smart1662;
@using Pwa.FrameWork.Dto;
@using Pwa.FrameWork.Dto.Smart1662;
@using Pwa.FrameWork.Dto.Smart1662.Incident
@using Pwa.FrameWork.Dto.Utils;
@{

    ViewBag.Title = "รับเรื่องร้องเรียน";
    Layout = "~/Views/Shared/_Layout.cshtml";

    UserInfoDto currentUser = (UserInfoDto)ViewBag.CurrentUser;

    List<DropDownlistDto> SysBranchs = (List<DropDownlistDto>
)ViewBag.SysBranchs;

    List<DropDownlistDto> SysChannels = (List<DropDownlistDto>
)ViewBag.SysChannels;

    List<DropDownlistDto> Employees = (List<DropDownlistDto>
)ViewBag.Employees;

    List<DropDownlistDto> Tumbols = (List<DropDownlistDto>
)ViewBag.Tumbols;

    var incidentTypes = ViewBag.incidentTypes;



    List<DropDownlistDto> Titles = (List<DropDownlistDto>
)ViewBag.Titles;
    FileDto fileDto = null;

}

@section Scripts
{
    <!-- -->

    <script src="~/Scripts/moment.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>


    <link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />



    <script type="text/javascript">
        var GetCustomerUrl = '@Url.Action("GetCustomer", "Incident")';
        var GetCustomerByAddressUrl = '@Url.Action("GetCustomerByAddress", "Incident")';
        var GetEmployees = '@Url.Action("GetEmployees", "Incident")';
        var GetCustomerNameAndCodeUrl = '@Url.Action("GetCustomerNameAndCode", "Incident")';

        var _incidentTypes = @Html.Raw(Json.Encode(ViewBag.IncidentTypes)) ;
        var _provinces = @Html.Raw(Json.Encode(ViewBag.Provinces)) ;
        var _distincts = @Html.Raw(Json.Encode(ViewBag.Distincts)) ;
        var _subdistincts = @Html.Raw(Json.Encode(ViewBag.SubDistincts)) ;
        var _pageInfo = @Html.Raw(Json.Encode(ViewBag.PageInfo)) ;
        var _currUser = @Html.Raw(Json.Encode(ViewBag.CurrUser)) ;

        var incidentStyle = L.Icon.extend({
            options: {
                iconSize: [27, 27],
                iconAnchor: [38, 86],
                popupAnchor: [-20, -80]
            }
        });

    </script>

    <style>

        .chkSLA {
            padding-top: 30px;
        }



        .tab-content {
            padding-top: 15px;
        }

        .modal-open > .select2-container {
            z-index: 1700;
        }


        .fullScreen {
            position: fixed;
            top: 0;
            right: 0;
            width: 100%;
            height: 100%;
            z-index: 17000;
        }

        .mapfull {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
        }

        .btnExpandMap {
            position: absolute;
            right: 20px;
            bottom: 20px;
            padding: 10px;
            z-index: 400;
        }

        .mapdefault {
            height: 800px;
            width: 100%;
        }

        #streetPanorama {
            left: 20px;
            top: 5px;
            width: 300px;
            height: 300px;
            position: absolute;
            z-index:1000;
        }
    </style>

}


@model IncidentDisplayDto

<form id="frmReceiveIncident" action="#" class="" role="form" autocomplete="on" novalidate>
    <div class="container">
        <div class="row" data-plugin="matchHeight" data-by-row="true">
            <div class="col-xxl-12">

                <input type="hidden" id="hddPwaIncidentID" value="@(Model !=null  ? Model.PwaIncidentID.ToString() :"")" />
                <input type="hidden" id="hddInformID" value="@(Model !=null  ? Model.InformID.ToString() :"")" "     />
                <!-- Contacts Content -->
                <div class="panel panel-primary panel-line">

                    <!-- Contacts Content Header -->
                    <div class="panel-heading">
                        <h1 class="panel-title">รายการร้องเรียน > เพิ่ม/แก้ไข </h1>
                        <div class="page-header-actions">

                        </div>
                    </div>

                    <!-- Contacts Content -->
                    <div class="panel-body" data-plugin="selectable">
                        <div class="row">
                            <div class="panel-title">ผู้แจ้ง</div>
                        </div>
                        <div class="row">
                            <div class="col-md-2 col-lg-2">
                                <div class="form-group">
                                    <label for="ddlTitle">คำนำหน้า</label>
                                    <select id="ddlTitle" class="select2">
                                        <option value="0">กรุณาเลือก</option>
                                        @foreach (DropDownlistDto it in ViewBag.Titles)
                                        {
                                            <option value="@it.Value" @(it.Value == (Model != null ? Model.Title : "") ? "selected" : "")>@it.Text </option>
                                        }
                                    </select>

                                </div>
                            </div>
                            <div class="col-md-6 col-lg-6">
                                <div class="form-group ">
                                    <label for="txtCustomer">ชื่อ-สกุล</label>
                                    <div class="input-group autocomplete">
                                        <input id="txtCustomer" class="form-control txtCustomer" autocomplete="off" value="@(Model != null ? Model.CustomerName : "")" />

                                        <input id="hddCustomerID" type="hidden" value="@(Model != null ? Model.CustomerID : "")" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4 col-lg-4">

                                <div class="form-group autocomplete">
                                    <label for="txtCustCode">รหัสผู้ใช้น้ำ</label>
                                    <div class="input-group">
                                        <input id="txtCustCode" class="form-control txtCustCode" autocomplete="off" value="@(Model != null ? Model.CustCode : "")" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-8 col-lg-8">
                                <div class="form-group ">
                                    <label for="txtAddress">ที่อยู่</label>
                                    <textarea type="text" class="form-control" id="txtAddress" name="txtAddress"
                                              placeholder="">@(Model !=null  ? Model.CustomerAddress :"") </textarea>
                                </div>

                            </div>

                            <div class="col-md-4 col-lg-4">
                                <label for="txtTelephone">เบอร์โทรศัพท์</label>
                                <div class="input-group autocomplete">
                                    <input type="text" class="form-control" id="txtTelephone" name="txtTelephone"
                                           value="@(Model !=null  ? Model.Telephone :"") "
                                           placeholder="" required />
                                </div>
                            </div>
                            <div class="col-md-8 col-lg-4">
                                <div class="form-group">
                                    <label class="ddlSubDistrict" for="ddlSubDistrict">ตำบล</label>
                                    <div class="autocomplete">
                                        <input type="text" class="form-control txtTumbol" autocomplete="off" id="txtTumbol" value="@(Model !=null  ? Model.SubDistrictText : "")" name="" placeholder="ตำบล...">
                                        <input type="hidden" id="hddTumbolCode" value="@(Model !=null  ? Model.SubDistrict :"")" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label for="txtAmphur">อำเภอ</label>
                                    <div class="autocomplete">
                                        <input type="text" class="form-control txtAmphur" id="txtAmphur" value="@(Model !=null  ? Model.DistrictText : "")" name="" placeholder="อำเภอ...">
                                        <input type="hidden" id="hddAmphurCode" value="@(Model !=null  ? Model.District :"")" />

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4 col-lg-4 ">
                                <div class="form-group">
                                    <label for="txtProvince">จังหวัด</label>
                                    <div class="autocomplete">
                                        <input type="text" class="form-control txtProvince" id="txtProvince" value="@(Model !=null  ? Model.ProvinceText : "")" name="" placeholder="จังหวัด...">
                                        <input type="hidden" id="hddProvinceCode" value="@(Model !=null  ? Model.Province :"")" />

                                    </div>

                                </div>
                            </div>
                            <div class="col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label for="ddlInformChannelID">ช่องทางการแจ้ง</label>
                                    <select id="ddlInformChannelID" class="select2">
                                        <option value="0">ช่องทาง</option>
                                        @foreach (DropDownlistDto it in SysChannels)
                                        {
                                            <option value="@it.Value" @(it.Value == (Model != null ? Model.InformChannelID : "") ? "selected" : "")>@it.Text </option>
                                        }
                                    </select>



                                </div>
                            </div>
                            <div class="col-md-8 col-lg-8">
                                <div class="form-group">
                                    <label for="txtInformReference" class="lblInformReference">รายละเอียดช่องทางการแจ้ง</label>
                                    <input type="text" class="form-control" id="txtInformReference"
                                           value="@(Model !=null  ? Model.InformReference :"") " placeholder="" />
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xxl-12">
                <!-- Contacts Content -->
                <div class="panel panel-primary panel-line">
                    <div class="panel-heading">
                        <div class="panel-title">การรับแจ้งร้องเรียน</div>
                    </div>
                    <!-- Contacts Content -->
                    <div class="panel-body" data-plugin="selectable">

                        <div class="row">
                            <div class="col-md-3 col-lg-3">
                                <div class="form-group">

                                    <label for="ddlPwaIncidentTypeID">ประเภทการรับแจ้ง</label>
                                    <select id="ddlPwaIncidentTypeID" class="select2">
                                        <option value="0">ประเภทรับแจ้ง</option>
                                        @foreach (DropDownlistDto it in ViewBag.sysRequestTypes)
                                        {
                                            <option value="@it.Value" @(it.Value == (Model != null ? Model.PwaIncidentTypeID.Trim() : "") ? "selected" : "")>@it.Text </option>
                                        }

                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3 col-lg-3">
                                <div class="form-group ">
                                    <label for="txtIncidentNo">เลขที่รับแจ้ง</label>
                                    <input type="text" id="PwaIncidentNo" class="form-control"
                                           placeholder="เลขที่รับแจ้ง"
                                           value="@(Model !=null  ? Model.PwaIncidentNo :"") "
                                           readonly />
                                </div>
                            </div>
                            <div class="col-md-3 col-lg-3">
                                <div class="form-group">
                                    <label for="txtIncidentNo">ผู้รับแจ้ง</label>
                                    <select class="ddlPwaInformReceiver select2"
                                            id="ddlPwaInformReceiver"
                                            tabindex="-98">
                                        <option value="0">ผู้รับแจ้ง</option>
                                        @foreach (DropDownlistDto it in Employees)
                                        {
                                            <option value="@it.Value" @(it.Value == (Model != null ? Model.PwaInformReceiver :currentUser.UserLogin) ? "selected" : "")>@it.Text </option>
                                        }
                                    </select>

                                </div>


                            </div>
                            <div class="col-md-3 col-lg-3">
                                <label for="dtpReceiveCaseDate">วันเวลาที่รับแจ้ง</label>
                                <div class='input-group date  incdatetime' id='dtpReceiveCaseDate'>
                                    <input type='text' class="form-control" id="txtReceivedCaseDate" value="@(Model !=null  ? Model.ReceivedCaseDate :DateTime.Now.ToString("dd/MM/yyyy hh:mm",new System.Globalization.CultureInfo("th-TH"))) " />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-3 col-lg-3">
                                <div class="form-group">
                                    <input type="hidden" id="hddPwaIncidentGroupID" value="@(Model !=null  ? Model.PwaIncidentGroupID :"") " />
                                    <label for="ddlPwaIncidentGroupID">ด้านการร้องเรียน</label>
                                    <select id="ddlPwaIncidentGroupID" class="select2">
                                        <option></option>
                                    </select>
                                </div>


                            </div>
                            <div class="col-md-2">
                                <div class="form-group chkSLA">
                                    <input type="checkbox" class="icheckbox-primary" id="chkSLA"
                                           @((Model != null && Model.Sla ? "checked" : ""))
                                           data-checkbox-class="icheckbox_flat-blue " />
                                    <label for="inputUnchecked">ยกเว้น SLA</label>
                                </div>

                            </div>
                            <div class="col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label for="" class="lblSlaDetail">เหตุผล</label>
                                    <select id="ddlSlaDetail" class="select2" v-model="incident.SlaDetail">
                                        <option value="0">เหตุผล</option>
                                        @foreach (DropDownlistDto it in ViewBag.Reasons)
                                        {
                                            <option value="@it.Value" @(it.Value == (Model != null ? Model.SlaDetail : "") ? "selected" : "")>@it.Text </option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3 col-lg-3">
                                <label for="dtpCompletedCaseDate">วันเวลาที่เสร็จ</label>
                                <div class='input-group date  incdatetime' id='dtpCompletedCaseDate'>
                                    <input type='text' class="form-control" id="txtCompletedCaseDate" value="@(Model !=null  ? Model.CompletedCaseDate :"") " />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>

                            <div class="col-md-5 col-lg-5">
                                <div class="form-group">
                                    <input type="hidden" id="hddCaseTitle" value="@(Model !=null  ? Model.CaseTitle :"") " />
                                    <label for="ddlCaseTitle">หัวข้อการร้องเรียน</label>
                                    <select id="ddlCaseTitle" class="select2" tabindex="-98">
                                        <option></option>
                                    </select>

                                </div>
                            </div>
                            <div class="col-md-4 col-lg-4">

                                <div class="form-group">
                                    <label for="ddlBranch">สาขา</label>
                                    <select id="ddlBranch" class="select2" v-model="incident.BracnchNo">

                                        @foreach (DropDownlistDto it in SysBranchs)
                                        {
                                            <option value="@it.Value" @(it.Value == (Model != null ? Model.BracnchNo : "") ? "selected" : "")>@it.Text </option>
                                        }

                                    </select>

                                </div>
                            </div>
                            <div class="col-md-3 col-lg-3">
                                <input type="hidden" id="ddlIncidentStatus" value="@(Model !=null  ? Model.IncidentStatus.ToString() :"") " />
                               
                                <!--
        <label for="ddlIncidentStatus">สถานะการดำเนินงาน</label>
        <select id="ddlIncidentStatus" class="selectpicker"
                v-model="incident.IncidentStatus"
                tabindex="-98">
            <option value="1">รับเรื่อง</option>
            <option value="9">ปิดเรื่อง</option>
        </select>-->
                            </div>
                            <div class="col-md-8 col-lg-8">

                                <div class="form-group">

                                    <label for="">รายละเอียดการรับแจ้ง</label>
                                    <textarea type="text" class="form-control marker"
                                              data-iconlibrary="fa"
                                              rows="10" id="txtCaseDetail"
                                              name="address" placeholder="รายละเอียด" value=" ">
                                    @(Model !=null  ? Model.CaseDetail : "")
                                    </textarea>
                                </div>
                                @if (Model != null
                                    && Model.Files != null
                                    && Model.Files.Count > 0
                                     && Model.Files.Find(o => o.No == "1") != null)
                                {
                                    fileDto = Model.Files.Find(o => o.No == "1");
                                    <div class="d-flex">
                                        <label class="file-upload btn btn-info btn-outline invisible">
                                            เลือกไฟล์<input type="file" id="fIncidentImage" />
                                        </label>
                                        <img src="@Url.Content(fileDto.HtmlFile)"
                                             data-toggle="popover"
                                             data-html="true"
                                             data-content="<img src='@Url.Content(fileDto.HtmlFile)' style='width:100%'></img>"
                                             class="thumbnail" />
                                        <i class="glyphicon glyphicon-remove icon-2x text-danger btnDeletefile vertical-align-middle" data="@fileDto.FileID"></i>
                                    </div>
                                }
                                else
                                {
                                    <label class="file-upload btn btn-info btn-outline">
                                        เลือกไฟล์ <input type="file" id="fIncidentImage" />
                                    </label>



                                }



                            </div>
                            <div class="col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label for="txtIncidentAddress">สถานที่เกิดเหตุ</label>
                                    <div class="input-group">
                                        <input type="hidden" id="hdCaseLatitude" value="@(Model !=null  ? Model.CaseLatitude : "")" />
                                        <input type="hidden" id="hdCaseLongtitude" value="@(Model !=null  ? Model.CaseLongtitude : "")" />
                                        <input type="text" class="form-control" id="txtIncidentAddress"
                                               name="txtIncidentAddress" placeholder=""
                                               value="@(Model !=null  ? Model.PwsIncidentAddress : "")" />
                                        <img src="/Content/assets/images/map.png" style="height:2.573rem" class="btnAddMap" />
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>


            </div>
            <div class="col-xxl-12">
                <div class="panel panel-success panel-line" style="border:0.5px solid #11c26d">
                    <div class="panel-heading">
                        <h3 class="panel-title">การแก้ไขปัญหา</h3>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-12 col-lg-12">
                                <div class="form-group">
                                    <label for="">อธิบายวิธีการแก้ไข</label>
                                    <textarea type="text" class="form-control marker"
                                              data-iconlibrary="fa"
                                              rows="5"
                                              id="txtResolvedDetail"
                                              name="address" placeholder="รายละเอียด">
@(Model !=null  ? Model.ResolvedDetail : "")

</textarea>


                                    @if (Model != null
                                   && Model.Files != null
                                   && Model.Files.Count > 0
                                    && Model.Files.Find(o => o.No == "2") != null)
                                    {
                                        fileDto = Model.Files.Find(o => o.No == "2");
                                        <div class="d-flex">
                                            <label class="file-upload btn btn-success btn-outline invisible" style="margin-top:20px">
                                                เลือกไฟล์ <input type="file" id="fResolveImage" />
                                            </label>
                                            <img src="@Url.Content(fileDto.HtmlFile)"
                                                 data-toggle="popover"
                                                 data-html="true"
                                                 data-content="<img src='@Url.Content(fileDto.HtmlFile)' style='width:100%'></img>"
                                                 class="thumbnail" />
                                            <i class="glyphicon glyphicon-remove icon-2x text-danger btnDeletefile vertical-align-middle" data="@fileDto.FileID"></i>
                                        </div>
                                    }
                                    else
                                    {
                                        <label class="file-upload btn btn-success btn-outline " style="margin-top:20px">
                                            เลือกไฟล์ <input type="file" id="fResolveImage" />
                                        </label>


                                    }



                                </div>

                            </div>
                            <div class="col-md-3 col-lg-3">

                                <div class="form-group">
                                    <label for="txtIncidentNo">ผู้บันทึก</label>
                                    <select class="ddlRecorder selectpicker"
                                            id="ddlRecorder"
                                            tabindex="-98" disabled>
                                       
                                        @foreach (DropDownlistDto it in (List<DropDownlistDto>)ViewBag.Recorder)
                                        {
                                           
                                            <option value="@it.Value" >@it.Text </option>
                                        }
                                    </select>

                                </div>


                            </div>
                            <div class="col-md-3 col-lg-3">
                                <div class="form-group">
                                    <label for="txtIncidentNo">วันเวลาที่บันทึก</label>
                                    <input type="text" class="form-control"
                                           id="txtIncidentRecordDate" placeholder="วันที่บันทึก"
                                           value="@(Model !=null  ? Model.RecordDate : DateTime.Now.ToString("dd/MM/yyyy hh:mm",new System.Globalization.CultureInfo("th-TH")))" disabled>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

            </div>


            <div class="col-xxl-12 text-center">
                <div class="row">
                    <div class="col-md-6 col-lg-6">
                        <div class="panel panel-success panel-line" style="border:0.5px solid #11c26d;display:none" id="pnlFollow">
                            <div class="panel-heading text-left">
                                <h3 class="panel-title">รายการติดตาม</h3>
                            </div>
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-md-12 col-lg-12">
                                        <div class="table-responsive " id="divFollowResult">
                                            <table class="table table-striped" data-animate="fade">
                                                <thead>
                                                    <tr>

                                                        <th class="" scope="col">วันเวลา</th>
                                                        <th class="" scope="col">ช่องทางการติดตาม</th>
                                                        <th class="" scope="col">รายละเอียด</th>
                                                </thead>
                                                <tbody>
                                                    @if (ViewBag.Follows != null)
                                                    {
                                                        foreach (var item in ViewBag.Follows)
                                                        {
                                                            <tr>
                                                                <td>@item.Date</td>
                                                                <td>@item.Channel</td>
                                                                <td class="text-left">@item.Detail</td>
                                                            </tr>


                                                        }
                                                    }

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-6">
                        <div class="panel panel-success panel-line" style="border:0.5px solid #11c26d;display:none" id="pnlReject">
                            <div class="panel-heading text-left">
                                <h3 class="panel-title">รายการส่งเรื่องกลับ</h3>
                            </div>
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-md-12 col-lg-12">
                                        <div class="table-responsive " id="divFollowResult">
                                            <table class="table table-striped" data-animate="fade">
                                                <thead>
                                                    <tr>

                                                        <th class="" scope="col">วันเวลา</th>
                                                        <th class="" scope="col">สาขา</th>
                                                        <th class="" scope="col">รายละเอียดการส่งกลับ</th>
                                                </thead>
                                                <tbody>
                                                    @if (ViewBag.RejectHistory != null)
                                                    {
                                                        foreach (var item in ViewBag.RejectHistory)
                                                        {
                                                            <tr>
                                                                <td>@item.Date</td>
                                                                <td>@item.Branch</td>
                                                                <td class="text-left">@item.Detail</td>
                                                            </tr>


                                                        }
                                                    }

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                
            </div>
            <div class="col-xxl-12 text-center">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <button type="button" class="btn btn-danger" id="bttReject" style="display:none">ส่งกลับส่วนกลาง</button>
                        <button type="button" class="btn btn-success" id="bttBranchReceiveCase" style="display:none">รับเรื่อง</button>


                        <button type="button" class="btn btn-success " id="bttIncCloseCase" style="display:none">ปิดเรื่อง</button>
                        <button type="button" class="btn btn-info" id="bttIncReceiveCaseForProcessOutOfFix" style="display:none">บันทึกรับแจ้ง เพื่อรอตรวจสอบ</button>
                        <button type="button" class="btn btn-primary  btnSave" id="bttIncReceiveCase" style="display:none">บันทึกรับแจ้ง</button>
                        <button type="button" class="btn btn-primary " id="bttIncEditSave" style="display:none">บันทึก</button>
                        <button type="button" class="btn btn-outline btn-default">ยกเลิก</button>



                    </div>
                </div>
            </div>


        </div>
    </div>
</form>

<div class="modal modal-primary  fade" id="mdReject" aria-hidden="true" aria-labelledby="mdAddCustomer" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-simple">
        <div class="modal-content">
            <div class="modal-header modal-primary">
                <button type="button" class="close" aria-hidden="true" data-dismiss="modal">×</button>
                <h4 class="modal-title">ส่งกลับส่วนกลาง</h4>
            </div>
            <div class="modal-body" style="padding-top:10px">
                <div role="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group rejectReason" style="display:block">
                            <label for="">เหตุผลในการส่งกลับส่วนกลาง</label>
                            <input type="text" class="form-control" id="txtRejectReason"
                                   name="txtRejectReason" placeholder="เหตุผลการส่งกลับ" value="" />

                        </div>
                    </div>
                </div>
                <div role="row">
                    <div class="col-md-12 col-lg-12">
                        <button type="button" id="bttRejectSave" class="btn btn-primary ">บันทึก</button>
                        <button type="button" id="bttRejectCancel" class="btn btn-default">ยกเลิก</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal modal-primary  fade" id="mdAddCustomer" aria-hidden="true" aria-labelledby="mdAddCustomer"
     role="dialog" tabindex="-1">
    <div class="modal-dialog modal-simple">
        <div class="modal-content">
            <div class="modal-header modal-primary">
                <button type="button" class="close" aria-hidden="true" data-dismiss="modal">×</button>
                <h4 class="modal-title"> ผู้แจ้งร้องเรียน</h4>
            </div>
            <div class="modal-body" style="padding-top:10px">

                <div class="row">
                    <div class="col-md-3 col-lg-3">
                        <div class="form-group">
                            <select data-plugin="selectpicker" class="selectpicker" ย tabindex="-98">
                                <option>นาย</option>
                                <option>นาง</option>
                                <option>นางสาว</option>
                            </select>

                        </div>

                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group ">
                            <input type="text" class="form-control" name="name" placeholder="ชื่อ" />
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-5">
                        <div class="form-group">
                            <input type="text" class="form-control" name="phone" placeholder="นามสกุล" />
                        </div>
                    </div>




                </div>
                <div class="row">

                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <input type="text" class="form-control" name="Line" placeholder="เบอร์โทร" />
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <input type="text" class="form-control" name="address" placeholder="รหัสผู้ใช้น้ำ" />
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <input type="text" class="form-control" name="address" placeholder="รหัสมิเตอร์" />
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-12 col-lg-12">

                        <textarea type="text" class="form-control" name="desc" placeholder="ที่อยู่"></textarea>

                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" data-dismiss="modal" type="submit">Save</button>
                <a class="btn btn-sm btn-white" data-dismiss="modal" href="javascript:void(0)">Cancel</a>
            </div>
        </div>
    </div>
</div>


<div class="modal modal-primary  fade" id="mdMap" aria-hidden="true" aria-labelledby="mdMap"
     role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header modal-primary">
                <button type="button" class="close" aria-hidden="true" data-dismiss="modal">×</button>
                <h4 class="modal-title">เลือกพื้นที่ผลกระทบ</h4>
            </div>
            <div class="modal-body" style="padding-top:10px">
                <div class="row">
                    <div class="col-md-4">

                    </div>
                    <div class="col-md-8">

                        <div class="form-group">
                            <div class="input-search autocomplete">
                                <input type="text" class="form-control txtSearch" name="" placeholder="ค้นหาพื้นที่...">
                            </div>
                        </div>

                    </div>

                </div>
            
                <div class="row">
                    <div class="col-md-4">
                        <div class="row">
                            <div class="panel panel-primary panel-line" style="border:0.5px solid #3e8ef7">
                                <div class="panel-heading">
                                    <h3 class="panel-title">ค้นหาข้อร้องเรียน</h3>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-md-12 col-lg-12">

                                            <div class="form-group ddlProviceSearch">
                                                <label for="ddlProviceSearch">จังหวัด</label>
                                                <select id="ddlProviceSearch" class="select2">
                                                    <option value="0">กรุณาเลือก</option>
                                                    @foreach (LocationDto it in ViewBag.Provinces)
                                                    {
                                                        <option value="@it.Value" @(it.Value == (Model != null ? Model.Province : "") ? "selected" : "")>@it.Text </option>
                                                    }

                                                </select>


                                            </div>
                                        </div>
                                        <div class="col-md-12 col-lg-12">
                                            <div class="form-group">
                                                <label for="txtDetailSearch">เบอร์โทรศัพท์</label>
                                                <input type="text" class="form-control" id="txtDetailSearch" name="txtDetailSearch" />
                                            </div>
                                        </div>
                                        <div class="col-md-12 col-lg-12">
                                            <div class="form-group">
                                                <label for="txtArea">บริเวณ</label>
                                                <input type="text" class="form-control" id="txtAreaSearch" name="txtArea" />
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-lg-6">
                                            <div class="form-group">
                                                <input type='text' class="form-control datetime" id="txtSartDateSearch"
                                                       value="@Converting.DateOfStartdd_MM_yyyyTH(DateTime.Now)"
                                                       placeholder="จากวันที่" />
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-lg-6">
                                            <div class="form-group">
                                                <input type='text' class="form-control datetime" id="txtEndDateSearch"
                                                       value="@Converting.DateOfEnddd_MM_yyyyTH(DateTime.Now)"
                                                       placeholder="ถึงวันที่" />
                                            </div>
                                        </div>
                                        <div class="col-md-12 col-lg-12">
                                            <div class="form-group">

                                                <select id="ddlStatusSearch" class="selectpicker" tabindex="1500">
                                                    <option value="">ทั้งหมด</option>
                                                    <option value="9">ยังไม่เสร็จ</option>
                                                    <option value="1">เสร็จแล้ว</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-xl-12">
                                            <div class=" form-group">
                                                <button class="btn btn-outline-primary btnSearchIncident">ค้นหา</button>
                                                <button class="btn btn-outline-default">ล้างข้อมูล</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="row">
                            <div class="table-responsive " id="divResult">
                                <table class="table table-striped" data-animate="fade">
                                    <thead>
                                        <tr>

                                            <th class="" scope="col">วันเวลาที่รับแจ้ง</th>
                                            <th class="" scope="col">เลขที่รับแจ้ง</th>
                                            <th class="" scope="col">รายละเอียด</th>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>30/7/2563</td>
                                            <td>S202007020002</td>
                                            <td>ท่อรั่ว</td>
                                        </tr>

                                    </tbody>
                                </table>
                            </div>


                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="mapsection">
                            <div id="mapid" class="mapdefault"></div>
                            <button class="btn  btn-outline-success btnExpandMap">Full Map</button>
                            <div id="streetPanorama"></div>
                        </div>
                     
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>



<script>
    var typingTimer;                //timer identifier
    var doneTypingInterval = 2000;  //time in ms, 5 second for example
    var objSearch;
    var meterMaker;
    var locationSearch = [
        "ActionScript",
        "AppleScript",
        "Asp",
        "BASIC",
        "C",
        "C++",
        "Clojure",
        "COBOL",
        "ColdFusion",
        "Erlang",
        "Fortran",
        "Groovy",
        "Haskell",
        "Java",
        "JavaScript",
        "Lisp",
        "Perl",
        "PHP",
        "Python",
        "Ruby",
        "Scala",
        "Scheme"
    ];

    var currentUrl = getBaseUrl();
    var map = L.map('mapid').setView([13, 100], 6);
    var lalong;
    var keepDeleteFiles = [];
    var countries = ["Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Anguilla", "Antigua &amp; Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia &amp; Herzegovina", "Botswana", "Brazil", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central Arfrican Republic", "Chad", "Chile", "China", "Colombia", "Congo", "Cook Islands", "Costa Rica", "Cote D Ivoire", "Croatia", "Cuba", "Curacao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Polynesia", "French West Indies", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea Bissau", "Guyana", "Haiti", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauro", "Nepal", "Netherlands", "Netherlands Antilles", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "North Korea", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Puerto Rico", "Qatar", "Reunion", "Romania", "Russia", "Rwanda", "Saint Pierre &amp; Miquelon", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Korea", "South Sudan", "Spain", "Sri Lanka", "St Kitts &amp; Nevis", "St Lucia", "St Vincent", "Sudan", "Suriname", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Timor L'Este", "Togo", "Tonga", "Trinidad &amp; Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks &amp; Caicos", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States of America", "Uruguay", "Uzbekistan", "Vanuatu", "Vatican City", "Venezuela", "Vietnam", "Virgin Islands (US)", "Yemen", "Zambia", "Zimbabwe"];

    var geoSearchLayer;
    var branchLayerss;
    var editableLayers;
    var incidentLayers;
    var incidentStyle = L.Icon.extend({
        options: {
            iconSize: [27, 27],
        }
    });
    var branchStyle = L.Icon.extend({
        options: {
            iconSize: [27, 27]
        }
    });
    
    var fenway = new google.maps.LatLng(13.8763638, 100.5834613);
    var panoramaOptions = {
        position: fenway,
        pov: {
            heading: 34,
            pitch: 10
        }
    };
    var panorama;


    var incidentMaker = new incidentStyle({ iconUrl: getBaseUrl() + '/icon/incident.png' });
    var BranchMaker = new branchStyle({ iconUrl: getBaseUrl() + '/icon/pwabranch.png' });

    let GeoSearch = {
        token: "08a38faa15b0302ae1e415d18db8d78f3e3fabbd409c10e5de1ab15b8aa2f67573ad03bede273520",
        search: (searchKey, onSuccess) => {
            let searchData = {
                keyword: searchKey,
                key: GeoSearch.token,
                maxResult: 20
            }
            console.log(searchData);

            /**/
            $.ajax({

                url: "https://geosearch.cdg.co.th/g/search/autocomplete",
                data: searchData,
                type: "POST",
                dataType: "json",

                error: function (request, status, error) {
                    console.log('error search autocomplete');
                    console.log(request);
                    //console.log(request.responseJSON.success);
                    onSuccess(null);
                },
                success: function (data) {
                    console.log(data);
                    onSuccess(data);
                }
            });




        },
        getDetail: (key, onSuccess) => {
            let searchData = {
                locationid: key,
                key: GeoSearch.token
            }

            /**/
            $.ajax({

                url: "https://geosearch.cdg.co.th/g/search/details",
                data: searchData,
                type: "POST",
                dataType: "json",

                error: function (request, status, error) {

                    console.log(request);
                },
                success: function (data) {
                    console.log(data);
                    onSuccess(data);
                }
            });




        }
    }

    var PageController = {
        init: function () {
            $(document).ready(function () {

                $('.file-upload').file_upload();
                PageController.LoadMap();
                PageController.LoadEvent();
                if ($("#hddPwaIncidentID").val() != "") {
                    $('#pnlFollow').css("display", "block");
                    $('#pnlReject').show();

                    $('#ddlProvince').trigger("change");

                }


                let customerCode = $('#txtCustCode').val();
                let province = $('#hddProvinceCode').val();

                PageController.SearchIncident(customerCode, province, '', '', null, null)
                /*      $('#ddlPwaIncidentTypeID').empty();
                      $.each(_incidentTypes, function (i, item) {
                          $('#ddlPwaIncidentTypeID').append($('<option>', {
                              value: item.ID,
                              text: item.Name
                          }));
                      });*/

                $(".select2").select2({ width: '100%' });

                /*    $('.incdatetime').datetimepicker({
                        format: 'DD/MM/YYYY HH:mm',
                        showTodayButton: true
                    });
    */
                $(".marker").markdown({
                    autofocus: false,
                    height: 120,
                    iconlibrary: 'fa',
                    onShow: function (e) {
                        //e.hideButtons('cmdPreview');
                        e.change(e);
                    }
                });
                $(".datetime").datepicker()
                $('.clockpicker').clockpicker();
                $(".incdatetime").datetimepicker({
                    format: "DD/MM/YYYY HH:mm",
                    showTodayButton: !0
                })
                $(IncidentMenu).addClass("active");




            });
        },
        LoadEvent: function () {

            PageController.OnIncidentTypeChange();


            $(document).on("click", "#chkSLA", function (e) {
                if (!$(this).is(':checked')) {
                    $("#ddlSlaDetail").val(0).trigger("change");
                }

            });
            $(document).on("click", ".btnSearchIncident", function (e) {
                //   let customerCode = $('#ddlCustCode').val();
                let province = $('#ddlProviceSearch').val();
                let area = $('#txtAreaSearch').val();
                let startDate = $('#txtSartDateSearch').val();
                let endDate = $('#txtEndDateSearch').val();
                let status = $('#ddlStatusSearch').val();
                //customer, provinceId, detail, area, startDate, endDate
                PageController.SearchIncident("", province, "", area, status, startDate, endDate);

                //PageController.SearchIncident();
            });

            $(document).on("change", "#ddlPwaIncidentTypeID", function (e) {
                PageController.OnIncidentTypeChange();
            });
            $(document).on("change", "#ddlPwaIncidentGroupID", function (e) {
                PageController.OnIncidentCategoryChange();
            });

            $('#ddlProvince').change(function () {
                PageController.OnProvinceChange();
            });

            $('#ddlDistrict').change(function () {
                PageController.OnDistrictChange();
            });

            $('#ddlSlaDetail').change(function () {
                PageController.OnSlaDetailChange();
            });

            $('.txtProvince').on('input', function () {

                objSearch = _provinces.filter(function (obj, i) {
                    return obj.Text.indexOf($(".txtProvince").val()) > -1;
                });
                PwaManager.PwaAutoComplete($(".txtProvince"), objSearch, (val) => {
                    $("#hddProvinceCode").val(val);
                    PageController.SetLocation(val, null, null)
                });
            });

            $(document).on('keypress', '#txtCustomer', function () {
                if (event.keyCode === 13) {
                    var data = {
                        CustomerName: $("#txtCustomer").val(),
                        CustomerCode: "",
                        SearchType: "N"
                    }

                    meterMaker = null;
                    PwaManager.PwaPost(GetCustomerNameAndCodeUrl, data, function (resObj) {
                        PwaManager.PwaButonAutoComplete($('.txtCustomer'), resObj, (val) => {
                            $("#hddCustomerID").val(val);
                            PageController.SearchCustomer(val, null, null, "N");
                        }, "fa-user-circle-o text-primary");

                    });
                    return false;
                } else {
                    return true;
                }


            });

            $(document).on('keypress', '#txtCustCode', async function () {
                if (event.keyCode === 13) {
                    var data = {
                        CustomerName: "",
                        CustomerCode: $("#txtCustCode").val(),
                        SearchType: "C"
                    }
<<<<<<< .mine
                    meterMaker = null;
                    PwaManager.PwaPost(GetCustomerNameAndCodeUrl, data, function (resObj) {

||||||| .r563
                    PwaManager.PwaPost(GetCustomerNameAndCodeUrl, data, function (resObj) {

=======
                    await PwaManager.PwaPost(GetCustomerNameAndCodeUrl, data, function (resObj) {
                        console.log("PwaPost GetCustomerNameAndCodeUrl resObj = ")
                        console.log(resObj)
>>>>>>> .r572
                        if (resObj != null && resObj.length > 0) {
                            PwaManager.PwaButonAutoComplete($('.txtCustCode'), resObj, (val) => {
                                console.log("PwaButonAutoComplete val = ")
                                console.log(val)
                                $("#hddCustomerID").val(val);
                                if (resObj.length == 1) {
                                    if (resObj[0].Active == "ws_api") {
                                        $("#txtAddress").val(resObj[0].address_no);
                                        $("#txtCustCode").val(resObj[0].CustCode);
                                        $("#txtCustomer").val(resObj[0].CustomerName);
                                        return;
                                    }
                                }
                               
                                PageController.SearchCustomer(null, val, null, null, "C");

                            }, "fa-user-circle-o text-primary");
                        } else {
                            $('.txtCustCode').val('');
                        }
                    });
                    return false;
                } else {
                    return true;
                }

            });

            $(document).on('keypress', '#txtTelephone', function () {
                if (event.keyCode === 13) {
                    var data = {
                        CustomerName: "",
                        CustomerCode: "",
                        Telephone: $("#txtTelephone").val(),
                        SearchType: "T"
                    }
                    meterMaker = null;
                    PwaManager.PwaPost(GetCustomerNameAndCodeUrl, data, function (resObj) {
                        PwaManager.PwaButonAutoComplete($('#txtTelephone'), resObj, (val) => {
                            $("#txtTelephone").val(val);
                            PageController.SearchCustomer(null, null, val, "T");
                        }, "fa-user-circle-o text-primary");

                    });



                    return false;
                } else {
                    return true;
                }

            });

            $('.txtAmphur').on('input', function () {
                objSearch = _distincts.filter(function (obj, i) {
                    return obj.Text.indexOf($(".txtAmphur").val()) > -1;
                });

                PwaManager.PwaAutoComplete($(".txtAmphur"), objSearch, (districtId) => {
                    $("#hddAmphurCode").val(districtId);

                    PageController.SetLocation(null, districtId, null)
                });
            });

            $('.txtTumbol').on('input', function () {
                @*$("#ddlSubDistrict").removeClass("error");*@

                objSearch = _subdistincts.filter(function (obj, i) {
                    return obj.Text.indexOf($(".txtTumbol").val()) > -1;
                });
                PwaManager.PwaAutoComplete($(".txtTumbol"), objSearch, (subDistrictId) => {
                    $("#hddTumbolCode").val(subDistrictId);

                    PageController.SetLocation(null, null, subDistrictId)
                });
            });
            $('.txtSearch').focus(function () { $(this).select(); });
            $('.txtSearch').on('input', function () {

                //autocompletex(this.value);
                GeoSearch.search(this.value, (data) => {
                    var list = [];

                    if (data == null || data == '') {
                        return;
                    }

                    $.each(data.data, function (i, item) {
                        list.push({
                            'Text': item.FormattedAddress,
                            'Value': item.LocationID
                        })
                    });
                    console.log(list);
                    PwaManager.PwaAutoComplete($(".txtSearch"), list, (val) => {
                        GeoSearch.getDetail(val, (result) => {
                            if (result.success) {
                                let lat_long = '';
                                let lat = '';
                                let long = '';

                                editableLayers.clearLayers();
                                for (let key in result.data) {
                                    if (key == 'LAT_LON' && result.data.hasOwnProperty(key)) {
                                        lat_long = result.data[key];
                                    }
                                }

                                if (lat_long != null && lat_long != '') {
                                    var splitResult = lat_long.split(',');
                                    lat = splitResult[0];
                                    long = splitResult[1];
                                    editableLayers.addLayer(L.marker([lat * 1, long * 1]).addTo(map)).bindPopup(this.value);
                                    $('#txtIncidentAddress').val(this.value);
                                    $('#hdCaseLatitude').val(lat);
                                    $('#hdCaseLongtitude').val(long);
                                    map.setView([lat * 1, long * 1], 17);
                                    
                                }

                            }
                        });

                    });

                });
                /*if (this.value.length > 3) {
                    GeoSearch.search(this.value);
                }*/
            });

            $('#txtAddress').focus(function () { $(this).select(); });
            $('#txtAddress').on('input', function () {
                var tumbol = $(".txtTumbol").val();
                var amphur = $(".txtAmphur").val();
                var province = $(".txtProvince").val();

                console.log('tumbol = ' + tumbol);
                @*if ((tumbol != '') && (tumbol != null)) {*@
                    @*$("#ddlSubDistrict").removeClass("error");*@
                GeoSearch.search(this.value, (data) => {
                    var list = [];
                    console.log('Search Finished data = ' + data);

                    if (data == null || data == '' || data.search('error') > 0) {
                        if (this.value == "test") {
                            $('#txtAddress').val("28/5 หมู่2 ซ. ถ. รหัสไปรษณีย์ 77120");
                            PageController.SearchCustomer(null,null,null,{}, 'addr')
                        }
                        return;
                    }

                    $.each(data.data, function (i, item) {
                        list.push({
                            'Text': item.FormattedAddress,
                            'Value': item.LocationID
                        })
                    });
                    PwaManager.PwaAutoComplete($("#txtAddress"), list, (val) => {
                        GeoSearch.getDetail(val, (result) => {
                            if (result.success) {
                                $('#txtAddress').val(this.value);
                                PageController.SearchCustomer(this.value, null)
                            }
                        });
                    });
                });
               @* } else {
                    swal(
                        {
                            title: "กรุณาเลือกตำบล อำเภอ จังหวัด เพื่อใช้ระบบค้นหาที่อยู่",
                            text: "",
                            type: "warning",
                            timer: 1500
                        });
                }*@
            });

            $(".btnAddCustomer").on("click", function () {
                $("#mdAddCustomer").modal("show");
            })
            $(document).on('change', '#ddlCustomer', function (e) {
                if ($(this).val() != null && $(this).val() != "") {
                    //   $("#ddlCustCode").unbind('change');


                    PageController.SearchCustomer($(this).val(), null);
                }
            });

            $(document).on('change', '#ddlCustCode', function (e) {
                if ($(this).val() != null && $(this).val() != "") {
                    //  $("#ddlCustomer").unbind('change');


                    //    SearchCustomer(null, $(this).val());
                }
            });

            /*
            $(document).on('click', '.btnSave', function (e) {

                PageController.SaveData();

                return false;
            });
            */

            $('#bttIncEditSave').click(function (e) {
                PageController.SaveData();
            });
            $('#bttIncCloseCase').click(function (e) {
                incCloseCase();
            });

            $('#bttIncReceiveCase').click(function (e) {
                incReceiveCase();
            });

            $('#bttIncReceiveCaseForProcessOutOfFix').click(function (e) {
                incReceiveCaseForProcessOutOfFix();
            });

            


            $(document).on('click', '.btnDeletefile', function (e) {


                if ($(this).attr('data') != null) {
                    let objProcessFile = {};
                    objProcessFile.FileID = $(this).attr('data');
                    objProcessFile.PwaIncidentID = $("#hddPwaIncidentID").val();
                    objProcessFile.HtmlFile = $(this).closest("div").find("img").attr("src");
                    keepDeleteFiles.push(objProcessFile);
                    $(this).closest("div").find("img").remove();
                    $(this).closest("div").find("label.file-upload").removeClass("invisible");
                    $(this).remove();

                }
            });
            $(document).on("show.bs.modal", "#mdMap", function () {
                setTimeout(function () {
                    document.getElementById('mdMap').style.display = 'block';
                    map.invalidateSize();

                    if (meterMaker!=null)
                        meterMaker.openPopup();

                    panorama = new google.maps.StreetViewPanorama(document.getElementById('streetPanorama'), panoramaOptions);
                }, 10);
            });
            $(document).on("click", ".btnAddMap", function () {

                $("#mdMap").modal("show");

            });

            $(document).on("click", ".btnExpandMap", function () {


                if ($("#mapid").hasClass("mapfull")) {
                    $(this).text("Full Size");
                    $(".mapsection").removeClass("fullScreen");
                    $("#mapid").removeClass("mapfull")
                } else {
                    $(this).text("Normal Size");
                    $(".mapsection").addClass("fullScreen");
                    $("#mapid").addClass("mapfull")
                }


                setTimeout(function () {

                    map.invalidateSize();
                }, 10);
            });





            $('#bttReject').click(function (e) {
                $('#txtRejectReason').val('');
                $('#mdReject').modal('show');

            });

            $('#bttRejectSave').click(function (e) {
                PageController.RejectCase();

            });

            $('#bttRejectCancel').click(function (e) {

                $('#mdReject').modal('hide');

            });

            $('#bttBranchReceiveCase').click(function (e) {

                PwaManager.PwaConfirm("รับเรื่อง", "คุณต้องการรับเรื่องใช่หรือไม่", function (isConfirm) {

                    if (isConfirm) {
                        PageController.BranchReceiveCase();
                    }

                    swal.close();
                });

            });

            if (_currUser.IsCallCenter) {
                $("#chkSLA").checked = true;
            } else {
                $("#chkSLA").checked = false;
            }



            if (_pageInfo.Mode == 'EDIT' && _pageInfo.EditModel.ProcessStatus == 1) {
                $('#bttReject').show();
                $('#bttBranchReceiveCase').show();
                

            }

            if (_pageInfo.Mode == 'EDIT' &&  (_pageInfo.EditModel.ProcessStatus == 2)) {
                $('#bttBranchReceiveCase').show();
                $('#bttIncReceiveCaseForProcessOutOfFix').show();

            }

            if (_pageInfo.Mode != 'EDIT') {
                $('#bttIncCloseCase').show();
                $('#bttIncReceiveCase').show();
                if (!_currUser.IsCallCenter) {
                    $('#bttIncReceiveCaseForProcessOutOfFix').show();
                }

            } else {

                $('#bttIncEditSave').show();

            }

        },
        OnIncidentTypeChange: function () {
            let incType = $('#ddlPwaIncidentTypeID').val() * 1;
            let target = _incidentTypes.find(inc => inc.ID == incType);

            if (target != null) {
                $('#ddlPwaIncidentGroupID').html("");
                $('#ddlPwaIncidentGroupID').append($('<option>', {
                   e: "",
                    text: "กรุณาเลือก"
                }));
                $.each(target.Categories, function (i, item) {
                    $('#ddlPwaIncidentGroupID').append($('<option>', {
                        value: item.ID,
                        text: item.Name
                    }));
                });

                if ($("#hddPwaIncidentGroupID").val() != "") {
                    $('#ddlPwaIncidentGroupID').val($("#hddPwaIncidentGroupID").val().trim()).trigger("change");
                    $("#hddPwaIncidentGroupID").val("");
                } else {
                    $('#ddlPwaIncidentGroupID').val("").trigger("change");
                }



                /*$('#ddlIncidentCategory').selectpicker('refresh');*/
                PageController.OnIncidentCategoryChange();
            }
        },
        OnIncidentCategoryChange: function () {
            let incType = $('#ddlPwaIncidentTypeID').val() * 1;
            let target = _incidentTypes.find(inc => inc.ID == incType);

            if (target != null) {
                let incCategory = $('#ddlPwaIncidentGroupID').val() * 1;
                let targetCategory = target.Categories.find(inc => inc.ID == incCategory);


                $('#ddlCaseTitle').html("");

                $('#ddlCaseTitle').append($('<option>', {
                    value: "",
                    text: "กรุณาเลือก"
                }));
                if (targetCategory != null)
                    $.each(targetCategory.Subjects, function (i, item) {
                        $('#ddlCaseTitle').append($('<option>', {
                            value: item.ID,
                            text: item.Name
                        }));
                    });

                if ($("#hddCaseTitle").val() != "") {
                    $('#ddlCaseTitle').val($("#hddCaseTitle").val().trim()).trigger("change");
                    $("#hddCaseTitle").val('');
                }
                else {
                    $('#ddlCaseTitle').val("").trigger("change");

                }
            }
            /*$('#ddlIncidentTitle').selectpicker('refresh');*/




        },
        OnProvinceChange: function () {
            var province = $('#ddlProvince').val();
            PageController.GetAjaxData('DISTRICT', province, (data) => {

                if (data.length > 0) {
                    $('#ddlDistrict').html("");
                    $.each(data, function (i, item) {
                        $('#ddlDistrict').append($('<option>', {
                            value: item.ID,
                            text: item.Name
                        }));
                    });
                    $('#ddlDistrict').selectpicker('refresh');
                    PageController.OnDistrictChange();
                }

            }, (error => {
                alert(error.responseText);
            }));
        },
        SetLocation: function (ProvinceId, DistinctId, SubDistrictId) {
            var objLocation;
            $("#hddTumbolCode").val('');
            $("#hddAmphurCode").val('');
            $("#hddProvinceCode").val('');



            if (SubDistrictId != null) {
                objLocation = _subdistincts.filter(function (obj, i) {
                    return obj.Value == SubDistrictId;
                });
                $(".txtTumbol").val('');
                $(".txtAmphur").val('');
                $(".txtProvince").val('');
                $("#hddTumbolCode").val(SubDistrictId);

                if (objLocation != null && objLocation.length > 0) {
                    $(".txtTumbol").val(objLocation[0].Text.split('>')[0]);
                    $("#hddAmphurCode").val(objLocation[0].DistrictID);
                    objLocation = _distincts.filter(function (obj, i) {
                        return obj.Value == $("#hddAmphurCode").val();
                    });
                    $(".txtAmphur").val(objLocation[0].Text);
                    $("#hddProvinceCode").val(objLocation[0].ProvinceID);
                    objLocation = _provinces.filter(function (obj, i) {
                        return obj.Value == $("#hddProvinceCode").val();
                    });
                    $(".txtProvince").val(objLocation[0].Text);


                }
            } else if (DistinctId != null) {
                objLocation = _distincts.filter(function (obj, i) {
                    return obj.DistrictID == DistinctId;
                });

                $(".txtTumbol").val('');

                $(".txtProvince").val('');

                if (objLocation != null && objLocation.length > 0) {
                    $("#hddProvinceCode").val(objLocation[0].ProvinceID);
                    objLocation = _provinces.filter(function (obj, i) {
                        return obj.ProvinceID == $("#hddProvinceCode").val();
                    });
                    $(".txtProvince").val(objLocation[0].Text);
                }

            }
            else if (ProvinceId != null) {
                $(".txtTumbol").val('');
                $(".txtAmphur").val('');

            }



        },
        RejectCase: function () {

            var data = {
                'PwaIncidentID': $("#hddPwaIncidentID").val(),
                'BranchNo': PageController.GetIdBySelect2($("#ddlBranch")),
                'AccountNo': '',
                'IncidentStatus': '4',
                'IncidentStatusDetail': $('#txtRejectReason').val()
            }

            $.ajax({

                url: getBaseUrl() + '/api/Incident/UpdateIncidentStatus',
                data: data,
                type: "POST",
                dataType: "json",
                error: function (request, status, error) {
                    alert(request.responseText);
                },
                success: function (data) {

                    PwaManager.PwaWaiting(false);
                    swal(
                        {
                            title: "สำเร็จ!",
                            text: "บันทึกข้อมูลเรียบร้อย!",
                            timer: 1500
                        });

                    setTimeout(function () {
                        document.location.href = getBaseUrl() + '/Incident/index'
                    }, 1500);
                }
            });



        },
        BranchReceiveCase: function () {


            var data = {
                'PwaIncidentID': $("#hddPwaIncidentID").val(),
                'BranchNo': PageController.GetIdBySelect2($("#ddlBranch")),
                'AccountNo': '',
                'IncidentStatus': '3',
                'IncidentStatusDetail': ''
            }

            $.ajax({

                url: getBaseUrl() + '/api/Incident/UpdateIncidentStatus',
                data: data,
                type: "POST",
                dataType: "json",
                error: function (request, status, error) {
                    alert(request.responseText);
                },
                success: function (data) {

                    PwaManager.PwaWaiting(false);
                    swal(
                        {
                            title: "สำเร็จ!",
                            text: "บันทึกข้อมูลเรียบร้อย!",
                            timer: 1500
                        });

                    setTimeout(function () {
                        document.location.href = getBaseUrl() + '/Incident/index'
                    }, 1500);
                }
            });
        },
        OnSlaDetailChange: function () {
            var slaDetailIndex = $('#ddlSlaDetail').val();
            console.log('OnSlaDetailChange , slaDetailIndex = ' + slaDetailIndex);
            if (slaDetailIndex > 0) {
                $("#chkSLA").checked = true;
            }
        },
        OnDistrictChange: function () {
            var district = $('#ddlDistrict').val();
            PageController.GetAjaxData('SUBDISTRICT', district, (data) => {


                if (data.length > 0) {
                    $('#ddlSubDistrict').html("");
                    $.each(data, function (i, item) {
                        $('#ddlSubDistrict').append($('<option>', {
                            value: item.ID,
                            text: item.Name
                        }));
                    });
                    $('#ddlSubDistrict').selectpicker('refresh');
                }

            }, (error => {
                alert(error.responseText);
            }));
        },
        Validate: function () {
            var isPass = true;
             if ($("#chkSLA").is(':checked') && $("#ddlSlaDetail").val() == "0") {
                $(".lblSlaDetail").addClass("error");
                isPass = false;
            } else {
                $(".lblSlaDetail").removeClass("error");
            }

           @* $(".lblInformReference").addClass("error");
            isPass = false;*@
            console.log("ddlInformChannelID = " + $("#ddlInformChannelID").val())
            console.log("ddlInformChannelID = " + $("#ddlInformChannelID").select())
            if ($("#ddlInformChannelID").val() != "0" && $("#txtInformReference").val().trim() == "") {
                if ($("#ddlInformChannelID").val() >= 3) {
                    $(".lblInformReference").addClass("error");
                    isPass = false;
                }

            } else {
                $(".lblInformReference").removeClass("error");
            }

            if (!isPass) {
                swal(
                    {
                        title: "กรุณากรอกข้อมุลให้ครบถ้วน!",
                        text: "",
                        type: "warning",
                        timer: 1500
                    });
            }

            return isPass;
        },
        GetAjaxData: function (module, parentid, onSuccess, onError) {

            var pData = { 'Module': module, 'ParentID': parentid };

            $.ajax({

                url: getBaseUrl() + 'api/Incident/GetData/',
                data: pData,
                type: "POST",
                dataType: "json",
                error: function (request, status, error) {
                    onError(request);
                },
                success: function (data) {
                    onSuccess(data);
                }
            });
        },
        SearchCustomer: function (CustomerId, CustomerCode, Telephone, Address, SearchType) {
            var obj = {}
            var url = GetCustomerUrl;
            console.log('SearchCustomer : Id =' + CustomerId + ", CustomerCode = " + CustomerCode + ", type" + SearchType)
            if (SearchType == 'addr') {
                obj.AddressNo = '28/5';
                obj.VillageNo = '2';
                obj.Zipcode = '77120';
                url = GetCustomerByAddressUrl;
            } else {
                obj.CustomerId = CustomerId;
                obj.CustomerCode = CustomerCode;
                obj.Telephone = Telephone;
            }

            PwaManager.PwaPost(url, obj, function (resObj) {

                if (resObj != null) {
                    $("#txtAddress").val(resObj.address_no);
                    $("#txtTelephone").val(resObj.tel)
                    $("#txtCustCode").val(resObj.CustCode);
                    $("#txtCustomer").val(resObj.CustomerName);
                    $("#hddCustomerID").val(resObj.CustId);
                    $("#ddlBranch").val(resObj.CustCode.substring(0, 4)).trigger('change');
                    $("#ddlTitle").val(resObj.Title).trigger('change');

                    $("#txtProvince").val(resObj.ProvinceName);
                    $("#hddProvinceCode").val(resObj.ProvinceCode);

                    $("#txtAmphur").val(resObj.AmphurName);
                    $("#hddAmphur").val(resObj.AmphurCode);
                    $("#hddAmphurCode").val(resObj.AmphurCode);

                    $("#txtTumbol").val(resObj.TumbolName);
                    $("#hddTumbol").val(resObj.TumbolCode);
                    $("#hddTumbolCode").val(resObj.TumbolCode);


                    if (resObj.MeterInfo != null) {
                        var meterLaLang;
                        editableLayers.clearLayers();
                        resObj.MeterInfo.Shape.geometry.coordinates = resObj.MeterInfo.Shape.geometry.coordinates[0];
                        var html = "<table>";
                        html += "<tr>";
                        html += "<td>รหัสผู้ใช้น้ำ : </td>";
                        html += "<td>" + resObj.CustCode+"</td>";
                        html += "</tr>";
                        html += "<tr>";
                        html += "<td>รหัสมิเตอร์ : </td>";
                        html += "<td>" + resObj.MeterInfo.meterno + "</td>";
                        html += "</tr>";
                        html += "<tr>";
                        html += "<td>ชื่อผู้ใช้น้ำ :</td>";
                        html += "<td>" + resObj.CustomerName + "</td>";
                        html += "</tr>";

                        html += "</table>";
                         meterMaker = L.geoJson(resObj.MeterInfo.Shape, {
                            pointToLayer: function (feature, latlng) {
                                meterLaLang = latlng;
                                var smallIcon = new L.Icon({
                                    iconSize: [32, 32],

                                    iconUrl: currentUrl + '/icon/user.png'
                                });
                                return L.marker(latlng, { icon: smallIcon });
                            }
                        });
                        editableLayers.addLayer(meterMaker).addTo(map);
                        meterMaker.bindPopup(html);

                        map.setView(meterLaLang, 17);



                    }
                    

                }
               
                console.log(resObj);
            });
        },
        GetIdBySelect2: function (obj) {
            var result = obj!=null ?  (obj.select2("data") != null && obj.select2("data").length > 0 ? obj.select2("data")[0].id : null) : "";
            return result;
        },
        GetIdBySelect2: function (obj, def) {
            var result = obj.select2("data") != null && obj.select2("data").length > 0 ? obj.select2("data")[0].id : def;
            return result;
        },
        SaveData: function () {

            var submitUrl = "";

            var formData = new FormData();


            if (PageController.Validate()) {

                formData.append("model", JSON.stringify(PageController.GetData()));

                if ($("#fIncidentImage")[0] != null)
                    formData.append("file1", $("#fIncidentImage")[0].files[0]);

                if ($("#fResolveImage")[0] != null)
                    formData.append("file2", $("#fResolveImage")[0].files[0]);

                PwaManager.PwaWaiting(true);
                submitUrl = getBaseUrl() + '/api/Incident/AddIncident';
                if ($("#hddPwaIncidentID").val().length > 0) {
                    submitUrl = getBaseUrl() + '/api/Incident/SaveEditIncident';
                }

                $.ajax({

                    url: submitUrl,
                    data: formData,
                    type: "POST",
                    //dataType: "json",
                    processData: false,
                    contentType: false,
                    error: function (request, status, error) {
                        alert(request.responseText);
                    },
                    success: function (data) {



                        PwaManager.PwaWaiting(false);
                        swal(
                            {
                                title: "สำเร็จ!",
                                text: (_pageInfo.Mode != 'EDIT') ? "บันทึกข้อมูลสำเร็จ เลขที่รับแจ้ง '" + data.IncidentNo + "'" : 'บันทึกข้อมูลสำเร็จ',
                                timer: 2000
                            });

                        setTimeout(function () {
                            document.location.href = getBaseUrl() + '/Incident/index'
                        }, 2000);
                    }
                });

            }
        },
        LoadStreetView: function (lat,lng) {

            setTimeout(function () {
                panoramaOptions.position = new google.maps.LatLng(lat, lng);
                panorama = new google.maps.StreetViewPanorama(document.getElementById('streetPanorama'), panoramaOptions);

            }, 50);
        },
        GetData: function () {

            var FirstName = $("#txtCustomer").val() != "" ? $("#txtCustomer").val().split(' ')[0] : "";
            var LastName = $("#txtCustomer").val() != "" && $("#txtCustomer").val().split(' ').length > 1 ? $("#txtCustomer").val().split(' ')[1] : "";
            var Incident = {
                PwaIncidentID: $("#hddPwaIncidentID").val(),
                PwaIncidentNo: $("#PwaIncidentNo").val(),

                PwaInformReceiver: PageController.GetIdBySelect2($("#ddlPwaInformReceiver")),
                PwaInformDate: null,

                PwaIncidentTypeID: PageController.GetIdBySelect2($("#ddlPwaIncidentTypeID")),
                PwaIncidentGroupID: PageController.GetIdBySelect2($("#ddlPwaIncidentGroupID")),
                PwaInformChannel: PageController.GetIdBySelect2($("#ddlInformChannelID")),
                CaseTitle: PageController.GetIdBySelect2($("#ddlCaseTitle")),
                CaseTitleDetail: "",
                CaseDetail: $("textarea#txtCaseDetail").val(),
                ResolvedDetail: $("textarea#txtResolvedDetail").val(),
                Sla: $("#chkSLA").is(':checked'),
                SlaDetail: PageController.GetIdBySelect2($("#ddlSlaDetail")),
                ReceivedCaseDate: $("#txtReceivedCaseDate").val(),
                CompletedCaseDate: $("#txtCompletedCaseDate").val(),
                CaseLatitude: $('#hdCaseLatitude').val(),
                CaseLongtitude: $('#hdCaseLongtitude').val(),
                PwsIncidentAddress: $("#txtIncidentAddress").val(),
                BracnchNo: PageController.GetIdBySelect2($("#ddlBranch")),
                Recorder: PageController.GetIdBySelect2($("#ddlRecorder")),
                RecordDate: $("#txtIncidentRecordDate").val(),
                IncidentStatus: $('#ddlIncidentStatus').val(),
                IsCallenter: _currUser.IsCallCenter,
                /*IncidentStatus: 1,*/
                User: _currUser,
                ImageFile: ''
               


            }
            Incident.Informers = [];
            Incident.Informers.push({
                InformerID: $("#hddInformID").val(),
                CustomerID: $("#hddCustomerID").val(),
                Title: PageController.GetIdBySelect2($("#ddlTitle")),
                FirstName: FirstName,
                LastName: LastName,
                MeterNo: "",
                Telephone: $("#txtTelephone").val(),
                InformChannelID: PageController.GetIdBySelect2($("#ddlInformChannelID")),
                InformReference: $("#txtInformReference").val().trim(),
                CustCode: $("#txtCustCode").val(),
                Province: $("#hddProvinceCode").val(),
                District: $("#hddAmphurCode").val(),
                SubDistrict: $("#hddTumbolCode").val(),
                CustomerAddress: $("textarea#txtAddress").val()

            });

            return Incident;
        },
        LoadMap: function () {

        var    googleStreets = L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
                maxZoom: 20,
                subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
            });

           var  googleHybrid = L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {
                maxZoom: 20,
                subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
            });

         var   googleSat = L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
                maxZoom: 20,
                subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
            });

       var     googleTerrain = L.tileLayer('http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}', {
                maxZoom: 20,
                subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
            });

            var zoomControl = new L.Control.Zoom({ position: 'topright' });


            var url = 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png',
                attr =
                    'Map data: &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)',
                otm = new L.TileLayer(url, {
                    attribution: attr,
                    /*subdomains:"1234"*/

                });

    

            //var ggl = new L.Google('ROADMAP'); // Possible types: SATELLITE, ROADMAP, HYBRID, TERRAIN



            var baseLayers = {
                "Google Map": googleStreets,
                "Leaflet Map": otm,
            };
          
            var layersControl = L.control.layers(baseLayers, null, { collapsed: false });

            layersControl.addTo(map);
            zoomControl.addTo(map);

         
         
            map.addLayer(googleStreets);

            //  WMSUrl = WMSUrl + "&CQL_FILTER=pwa_code=5542017";
            WMSUrl = WMSUrl + "&CQL_FILTER=pwa_code=5542017";
            var wmsLayer = L.tileLayer.wms(WMSUrl, {
                layers: 'PG_WEBGIS:bldgall',
                transparent: true,
                format: 'image/png'
            }).addTo(map);

        
          //  map.setStreetView(panorama);
        //    var googleLayer = new L.Google('ROADMAP');
         //   map.addLayer(googleLayer);
 
            branchLayers = new L.FeatureGroup();
            editableLayers = new L.FeatureGroup();
            incidentLayers = new L.FeatureGroup();
            map.addLayer(editableLayers);
            map.addLayer(branchLayers);
            map.addLayer(incidentLayers);
            if ($('#hdCaseLatitude').val().length > 0)
                editableLayers.addLayer(L.marker([$('#hdCaseLatitude').val() * 1, $('#hdCaseLongtitude').val() * 1]));

            var options = {
                position: 'topright',
                draw: {
                    polyline: false,
                    polygon: false,

                    circle: false, // Turns off this drawing tool
                    rectangle: false,
                    marker: true
                },

                edit: {
                    featureGroup: editableLayers, //REQUIRED!!
                    remove: true
                }
            };

         

            var drawControl = new L.Control.Draw(options);
            map.addControl(drawControl);


            map.on(L.Draw.Event.CREATED, function (e) {
                editableLayers.clearLayers();
                branchLayers.clearLayers();
                var type = e.layerType,
                    layer = e.layer;

                var lalong = layer.getLatLng();

                PageController.LoadStreetView(lalong.lat, lalong.lng);
            

                try {


                    //   map.addLayer(editableLayers);

                    $('#hdCaseLatitude').val(lalong.lat);
                    $('#hdCaseLongtitude').val(lalong.lng);
                    var data = {};
                    data.lat = lalong.lat;
                    data.lng = lalong.lng;

                    $.ajax({

                        url: getBaseUrl() + "api/Util/GetBranch/",
                        data: JSON.stringify(data),
                        type: "Post",
                        dataType: "json",
                        contentType: "application/json",
                        error: function (request, status, error) {
                            console.log(request);
                        },
                        success: function (data) {
                            console.log(data);
                            if (data != null && data.length > 0) {
                                var branchMaker = L.marker([data[0].lat * 1, data[0].lng * 1], { icon: BranchMaker }).bindPopup(`<b>สาขา :  ${data[0].pwaname}</b>`);
                                branchLayers.addLayer(branchMaker);

                                branchMaker.openPopup();
                                
                                $('#ddlBranch').val(data[0].ba);
                                $('#ddlBranch').trigger("change");


                            }
                            //    onSuccess(data);
                        }
                    });

                    /*     $.get(BranchUrl, data, function (data, status) {

                             branchLayers.addLayer(L.marker([$('#hdCaseLatitude').val() * 1, $('#hdCaseLongtitude').val() * 1]));

                         });*/



                    //branchLayers




                } catch (e) {
                    alert(e.message);
                }

                editableLayers.addLayer(layer);
            });

            map.on(L.Draw.Event.EDITED, function (e) {
                var layers = e.layers;
                layers.eachLayer(function (layer) {

                    latlngs = layer.getLatLng();
                    $('#hdCaseLatitude').val(latlngs.lat);
                    $('#hdCaseLongtitude').val(latlngs.lng);

                });

            });
            /*    var wmsLayer = L.tileLayer.wms(WMSUrl, {
                       layers: 'PG_WEBGIS:pipeall',
                       transparent: true,
                       format: 'image/png'
                   }).addTo(map);


             /*      var reg_zone = L.titleLayer.betterWms(wms_host_orcl, {
                       Layers: 'PWA_GIS:ZONE',
                       transparent: true,
                       format: 'image/png',
                       opacity: 0.2
                   });*/




            /*        var meter_all = L.titleLayter.betterWms(wms_host, {
                        layers: 'PG_WEBGIS:meterall',
                        format: 'image/png',
                    });
                    */

        },
        SearchIncident: function (customer, provinceId, detail, area, status, startDate, endDate) {

            var criteria = {
                CustomerNo: customer,
                ProvinceID: provinceId,
                Detail: detail,
                Area: area,
                Status: status,
                StartDate: startDate,
                EndDate: endDate,

            };

            if (incidentLayers != null) {
                incidentLayers.clearLayers();
            }
            PwaManager.PwaWaiting(true);
            $.ajax({

                url: getBaseUrl() + '/api/Incident/SearchBranchIncidents',
                data: criteria,
                type: "POST",
                dataType: "json",

                error: function (request, status, error) {
                    alert(request.responseText);
                },
                success: function (data) {

                    $('#divResult').html('');
                    var html = '<table class="table table-striped table table-hover" data-animate="fade">';
                    html += '    <thead>';
                    html += '            <tr>';

                    html += '                <th class="" scope="col">วันเวลาที่รับแจ้ง</th>';
                    html += '                <th class="" scope="col">เลขที่รับแจ้ง</th>';
                    html += '                <th class="" scope="col">รายละเอียด</th>';
                    html += '                        </thead>';
                    html += '            <tbody>';
                    if (data.Result != null && data.Result.Incidents != null && data.Result.Incidents.length > 0) {
                        $.each(data.Result.Incidents, function (index, item) {
                            html += '                <tr>';
                            html += '                    <td>' + item.ReceivedCaseDate + '</td>';
                            html += '                    <td>' + item.PwaIncidentNo + '</td>';
                            html += '                    <td>' + item.RequestCategory + '</td>';
                            html += '                </tr>';
                        });

                    }
                    html += '     </table>';
                    $('#divResult').append(html);

                    $('#divResult  table').DataTable({ "searching": false, "bLengthChange": false, "pageLength": 5 });

                    PwaManager.PwaWaiting(false);

                    if (data.Result != null && data.Result.Incidents != null && data.Result.Incidents.length > 0) {
                        $.each(data.Result.Incidents, function (index, item) {
                            if (item.CaseLatitude != null && item.CaseLatitude != "" &&
                                item.CaseLongtitude != null && item.CaseLongtitude != ""
                            ) {
                                incidentLayers.addLayer(L.marker([item.CaseLatitude * 1, item.CaseLongtitude * 1], { icon: incidentMaker }).addTo(map)
                                    .bindPopup(`<b>เลขที่รับแจ้ง :  ${item.PwaIncidentNo}</b><br /><b>สาเหตุ :  ${item.RequestCategory}</b><br /><b>รายละเอียด :  ${item.RequestCategorySubject}</b>`)).openPopup();
                            }
                        });


                    }



                }
            });
        },
        GetPipeOfBanch: function () {
            $.ajax({
                type: 'GET',
                url: 'http://192.168.41.41:8080/geoserver/STAGING/wfs?service=WFS&version=1.1.0&request=GetFeature&typename=osm:GetLandOfRegions&SORTBY=ParcelWAHPriceMax%20DESC&outputFormat=application/json&srsname=EPSG:4326&'
                    + 'CQL_FILTER=PeriodID=' + $("#ddlSelectPeriodYear").val(),
                context: this
            }).done(function (data) {
                var format = new ol.format.GeoJSON();

                if (data.features != null && data.features.length > 0) {
                    var jsonObjs = format.readFeatures(data);
                    this.addFeatures(jsonObjs);
                    btnSelect = 'btnRegion';
                    PageController.setRankValue(jsonObjs);
                    PageController.LoadLand(jsonObjs);
                    var view = map.getView();

                    map.getView().setZoom(6);
                    setTimeout(function () {
                        waitingDialog.hide();
                    }, 400);
                } else {
                    PageController.LoadLand(null);
                    setTimeout(function () {
                        waitingDialog.hide();
                        swal("Failed", "ไม่พบข้อมูล!", "error");
                    }, 400);


                }
            }).fail(function (jqXHR, textStatus) {
                setTimeout(function () {
                    waitingDialog.hide();
                    swal("Failed", "ไม่สามารถใช้งานแผนที่ได้", "error");
                }, 400);
            });
        }
    }

    function delay(callback, ms) {
        var timer = 0;
        return function () {
            var context = this, args = arguments;
            clearTimeout(timer);
            timer = setTimeout(function () {
                callback.apply(context, args);
            }, ms || 0);
        };
    }

    function incCloseCase() {

        $('#ddlIncidentStatus').val('10');
        PageController.SaveData();
    }

    function incReceiveCase() {

        let status = (_currUser.IsCallCenter) ? '1' : '2';
        $('#ddlIncidentStatus').val(status);
        PageController.SaveData();
    }

    function incReceiveCaseForProcessOutOfFix() {

        let status = (_currUser.IsCallCenter) ? '12' : '12';
        $('#ddlIncidentStatus').val(status);
        PageController.SaveData();
    }


    PageController.init();















</script>
